@model X.PagedList.IPagedList<CCM_Website.Models.WeekActivities>
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Week Activity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb d-flex justify-content-start">
        <li><button class="btn btn-primary me-3" onclick="history.back();">Back</button></li>
        <div class="d-flex m-2">
            <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Admin" asp-action="Index">Admin</a></li>
            <li class="breadcrumb-item active" aria-current="page">Week Activities</li>
        </div>
    </ol>
    <hr/>
</nav>

<div class="row my-3">
    <div class="col d-flex justify-content-between align-items-center">
        <h2>Week Activities</h2>
        <a class="btn btn-success"
           asp-action="Create"
           asp-route-weekId="@(ViewData["DefaultWeekId"] ?? Model.FirstOrDefault()?.WeekId)">
           Create New Week Activity
        </a>
    </div>
</div>


<div class="row my-3">
    <div class="col d-flex justify-content-start align-items-center">
        @using (Html.BeginForm("Index", "WeekActivities", FormMethod.Get))
        {
        <div class="input-group">
            @Html.TextBox("searchString", ViewData["SearchString"] as string, new { @class = "form-control", placeholder = "Search task title..." })
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
        }
    </div>
</div>


<table class="table">
    <thead>
    <tr>
        <th>
            Week ID
        </th>
        <th>
            Activities
        </th>
        <th>
            Task Title
        </th>
        <th>
            Task Staff
        </th>
        <th>
            Task Time
        </th>
        <th>
            Task Status
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Week.WeekId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Activities.ActivityId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskStaff)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TasksStatus)
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-end gap-2">
                    <a class="btn btn-primary"  asp-action="Edit" asp-route-id="@item.WeekActivityId">Edit</a>
                    <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.WeekActivityId">Details</a>
                    <a class="btn btn-danger"  asp-action="Delete" asp-route-id="@item.WeekActivityId">Delete</a>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>

<br />
@Html.PagedListPager(Model,
    page => Url.Action("Index", new { page, searchString = ViewData["SearchString"] }),
    new PagedListRenderOptions
    {
        MaximumPageNumbersToDisplay = 3,
        DisplayLinkToFirstPage = (Model.PageNumber <= 2) ? PagedListDisplayMode.Never : PagedListDisplayMode.Always, 
        DisplayLinkToLastPage = (Model.PageNumber >= Model.PageCount - 1) ? PagedListDisplayMode.Never : PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Never, 
        DisplayLinkToNextPage = PagedListDisplayMode.Never,  
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,  
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" }, 
        PageClasses = new[] { "page-link" } 
    }
)

