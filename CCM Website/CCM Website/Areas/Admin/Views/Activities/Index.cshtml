@model X.PagedList.IPagedList<CCM_Website.Models.Activities>

@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Activity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb d-flex justify-content-start">
        <li><button class="btn btn-primary me-3" onclick="history.back();">Back</button></li>
        <div class="d-flex m-2">
            <li class="breadcrumb-item"><a href="/admin">Admin</a></li>
            <li class="breadcrumb-item active" aria-current="page">Activities</li>
        </div>
    </ol>
    <hr/>
</nav>

<div class="row my-3 align-items-start">
    <div class="col-md-10">
        <h2>Activities</h2>
    </div>
    <div class="col-md-2 d-flex justify-content-center">
        <a class="btn btn-success"
           asp-area="Admin" asp-controller="Activities" asp-action="Create">
            Create New Activity
        </a>
    </div>
</div>

@using (Html.BeginForm())
{
<div class="input-group">
    @Html.TextBox("searchString")
    <button type="submit" value="Search" class="btn btn-primary">Search</button>
</div>
}


<table class="table">
    <thead>
    <tr>
        <th>
            Activity Name
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityName)
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-end gap-2">
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ActivityId">Edit</a>
                    <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.ActivityId">Details</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ActivityId">Delete</a>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 1 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewData["SearchString"] }))
