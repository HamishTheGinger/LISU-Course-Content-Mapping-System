@model X.PagedList.IPagedList<CCM_Website.Models.Week>
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Week";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb d-flex justify-content-start">
        <li><button class="btn btn-primary me-3" onclick="history.back();">Back</button></li>
        <div class="d-flex m-2">
            <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Admin" asp-action="Index">Admin</a></li>
            <li class="breadcrumb-item active" aria-current="page">Week</li>
        </div>
    </ol>
    <hr/>
</nav>

<div class="row my-3 align-items-start">
    <div class="col-md-10">
        <h2>Weeks</h2>
    </div>
</div>

<div class="row my-3">
    <div class="col d-flex justify-content-start align-items-center">
        @using (Html.BeginForm("Index", "Week", FormMethod.Get))
        {
            <div class="input-group">
                @Html.TextBox("searchString", ViewData["SearchString"] as string, new { @class = "form-control", placeholder = "Search course name..." })
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        }
    </div>
</div>

<table class="table">
    <thead>
        
    <tr>
        <th>Week Number</th>
        <th>Course Name</th>
        <th></th>
    </tr>
    
    <tr></tr>
    </thead>
    <tbody>
        
    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.WeekNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.Workbook.CourseName)</td>
            <td>
                <div class="d-flex flex-wrap justify-content-end gap-2">
                    <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.WeekId">Details</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.WeekId">Delete</a>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>

<br />
@Html.PagedListPager(Model,
    page => Url.Action("Index", new { page, searchString = ViewData["SearchString"] }),
    new PagedListRenderOptions
    {
        MaximumPageNumbersToDisplay = 3,
        DisplayLinkToFirstPage = (Model.PageNumber <= 2) ? PagedListDisplayMode.Never : PagedListDisplayMode.Always, 
        DisplayLinkToLastPage = (Model.PageNumber >= Model.PageCount - 1) ? PagedListDisplayMode.Never : PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Never, 
        DisplayLinkToNextPage = PagedListDisplayMode.Never,  
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,  
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" }, 
        PageClasses = new[] { "page-link" } 
    }
)