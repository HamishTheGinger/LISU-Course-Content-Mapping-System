<!DOCTYPE html>
<html lang="en">
<head>
    <script>
        (function() {
            let isDarkMode = localStorage.getItem("darkMode") === "true";
            if (isDarkMode) {
                document.documentElement.classList.add("dark-mode");
            }
        })();
    </script>
    @* PT-Sans embed *@
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=PT+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CCM_Website</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/custom.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/CCM_Website.styles.css" asp-append-version="true" />
    <script src="https://d3js.org/d3.v7.min.js"></script>
    

</head>
<body class="body">
    <header class="p-3 bg-primary w-100 main-header">
        <div class="container-fluid">
            <div class="row row-header">
                <div class="col-md-6 col-12 d-flex justify-content-md-start justify-content-start align-items-center mb-3 mb-md-0">
                    <img src="/images/UOFG.PNG" alt="UOFG Logo" class="brand-logo img-fluid" style="width: 250px; height: auto;" />
                </div>
                <div class="col-md-6 col-12 d-flex justify-content-md-end justify-content-start align-items-center">
                    <img src="/images/LISU.PNG" alt="LISU Logo" class="brand-logo img-fluid" style="width: 250px; height: auto;" />
                </div>
            </div>
        </div>
    </header>
    <div class="container-fluid d-flex flex-column min-vh-100">
        <div class="row flex-grow-1 bg-primary">

            <nav class="col-md-2 navbar navbar-expand-md flex-column align-items-start p-3 h-100 overflow-auto sticky-top">
                <button class="navbar-toggler btn btn-burger mt-3 mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMenu"
                        aria-controls="navbarMenu" aria-expanded="false" aria-label="Toggle navigation">
                    <div class="burger-line"></div><div class="burger-line"></div><div class="burger-line"></div>

                </button>

                <div class="collapse navbar-collapse w-100" id="navbarMenu">
                    <ul class="navbar-nav flex-column w-100">
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Index">→ Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Workbooks" asp-action="Index">→ My Workbooks</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Workbooks" asp-action="Search">→ Search</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Settings">→ Settings</a>
                        </li>
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-white" asp-area="Admin" asp-controller="Admin" asp-action="Index">→ Admin</a>
                            </li>
                        }
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignOut">→ Log out</a>
                        </li>
                    </ul>
                </div>
            </nav>

            <main class="col-md-10 bg-white p-3 d-flex flex-column flex-grow-1">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>@ViewData["Title"]</h1>
                    <h1>@ViewData["LearningPlatform"]</h1>
                </div>
                <div role="main" class="p-3 w-100 h-100 bg-main shadow-sm">
                    @RenderBody()
                </div>
            </main>
        </div>

        <footer class="border-top footer text-muted p-3">
            © 2025 Learning Innovation Support Unit. All Rights Reserved.

            The University of Glasgow is a registered Scottish charity: Registration Number SC004401.
        </footer>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let savedFont = localStorage.getItem("font") || "PT Sans, sans-serif";
            let savedSize = localStorage.getItem("textSize") || "16px";
            let isDarkMode = localStorage.getItem("darkMode") === "true";

            document.documentElement.style.fontFamily = savedFont;
            document.body.style.fontFamily = savedFont;
            document.documentElement.style.fontSize = savedSize;
            document.querySelector("main").style.fontSize = savedSize;

            if (isDarkMode) {
                document.documentElement.classList.add("dark-mode");
            } else {
                document.documentElement.classList.remove("dark-mode");
            }

            document.querySelectorAll(".font-btn").forEach(btn => {
                btn.addEventListener("click", function () {
                    document.querySelectorAll(".font-btn").forEach(b => b.classList.remove("active"));
                    this.classList.add("active");

                    let newFont = this.getAttribute("data-font");
                    document.documentElement.style.fontFamily = newFont;
                    document.body.style.fontFamily = newFont;
                    localStorage.setItem("font", newFont);
                });

                if (btn.getAttribute("data-font") === savedFont) {
                    btn.classList.add("active");
                }
            });


            const colorSchemeToggle = document.getElementById("colorSchemeToggle");

            if (colorSchemeToggle) {
                colorSchemeToggle.checked = isDarkMode;

                colorSchemeToggle.addEventListener("change", function () {
                    if (this.checked) {
                        document.documentElement.classList.add("dark-mode");
                        localStorage.setItem("darkMode", "true");
                    } else {
                        document.documentElement.classList.remove("dark-mode");
                        localStorage.setItem("darkMode", "false");

                        document.querySelectorAll(".toggle-btn, .font-btn").forEach(btn => {
                            btn.style.transition = "none"; 
                        });

                       
                        setTimeout(() => {
                            location.reload();
                        }, 100);
                    }
                });
            }


            document.querySelectorAll(".toggle-btn").forEach(btn => {
                btn.addEventListener("click", function () {
                    document.querySelectorAll(".toggle-btn").forEach(b => b.classList.remove("active"));
                    this.classList.add("active");

                    let textSize = this.getAttribute("data-size");
                    let fontSize = textSize === "small" ? "12px" :
                        textSize === "large" ? "20px" : "16px";

                    document.documentElement.style.fontSize = fontSize;
                    document.querySelector("main").style.fontSize = fontSize;
                    localStorage.setItem("textSize", fontSize);
                });

                let expectedSize = btn.getAttribute("data-size") === "small" ? "12px" :
                    btn.getAttribute("data-size") === "large" ? "20px" : "16px";
                if (expectedSize === savedSize) {
                    btn.classList.add("active");
                }
            });

    
        });
    </script>
    </body>
</html>


